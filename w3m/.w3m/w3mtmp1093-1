Web hosting without headaches. Try
Cloudways with $100 in free credit!
Sign up ->

  • We're hiring
  • Blog
  • Docs
  • Get Support
  • Sales

DigitalOceanPicture

  • Products
   
    Featured Products

      □ DropletsScalable virtual
        machines
      □ KubernetesManaged Kubernetes
        clusters
      □ CloudwaysManaged cloud hosting
      □ App PlatformGet apps to market
        faster
      □ DatabasesWorry-free setup &
        maintenance
      □ SpacesSimple object storage

    Compute

      □ Droplets
      □ Kubernetes
      □ App Platform
      □ Functions

    Cloud Website Hosting

      □ Cloudways

    Storage

      □ Spaces Object Storage
      □ Volumes Block Storage

    Networking

      □ Virtual Private Cloud (VPC)
      □ Cloud Firewalls
      □ Load Balancers
      □ DNS

    Managed Databases

      □ MongoDB
      □ MySQL
      □ PostgreSQL
      □ Redis™

    Developer Tools

      □ API
      □ CLI
      □ Support Plans
      □ Monitoring
      □ Uptime
    See all products
  • Solutions
   
    Our Business Solutions

      □ Website HostingSimple and
        reliable cloud website hosting
      □ VPS HostingVPS hosting options
        suited to every need

    Cloudways

      □ Managed WordPress
      □ Managed Woocommerce
      □ Managed Magento

    By use case

      □ Cloud VPN
      □ Web & Mobile Apps
      □ Game Development
      □ Video Streaming
      □ SaaS Platforms
      □ Blockchain

    Resources

      □ Customers
      □ Security
      □ Startup Resources
      □ Questions?
        Speak With An Expert Today
    See all solutions
  • Marketplace
  • Community
   
    Our community

      □ Community HomeDevOps and
        development guides
      □ CSS-TricksAll things web
        design

    Resources

      □ Tutorials
      □ Questions And Answers
      □ Tools
      □ Write for DOnations
      □ Customer Stories
      □ DigitalOcean Blog

    Get Involved

      □ Hatch Startup Program
      □ Open Source Sponsorships
      □ Hacktoberfest
      □ Deploy
      □ DO Impact

    Documentation

      □ Quick Start
      □ Droplets
      □ Storage
      □ App Platform
      □ API Reference
      □ Domains and DNS
  • Pricing

  • Log in
      □ Sign inCommunityDigitalOcean
  • Sign up
      □ Sign upCommunityDigitalOcean

  • We're hiring
  • Blog
  • Docs
  • Get Support
  • Sales

  • Tutorials
  • Questions
  • Learning Paths
  • For Businesses
  • Product Docs
  • Social Impact
  • Search Community[communityS]

        CONTENTS
  • Prerequisites
  • Getting Started
  • Creating and Running a Basic Shell
    Script
  • Using Variables in Shell Scripts
  • Reading Input from the Command
    Line
  • Defining Functions
  • Conclusion

Related

What is .bashrc file in Linux?
Viewtutorial
Opening a port on Linux
Viewtutorial

// Tutorial //

How To Execute a Command with a Shell
Script in Linux

Published on August 3, 2022 · Updated
on December 5, 2022

  • UNIX/Linux

Default avatar
By Jayant Verma
Developer and author at DigitalOcean.
How To Execute a Command with a Shell
Script in Linux

Introduction

Shell is a command-line interpreter
that allows the user to interact with
the system. It is responsible for
taking inputs from the user and
displaying the output.

Shell scripts are a series of commands
written in order of execution. These
scripts can contain functions, loops,
commands, and variables. Scripts are
useful for simplifying a complex
series of commands and repetitive
tasks.

In this article, you will learn how to
create and execute shell scripts for
the command line in Linux.

Prerequisites

To complete this tutorial, you will
need:

  • Familiarity with using the
    terminal.
  • Familiarity with a text editor.
  • Familiarity with commands like
    chmod, mkdir, and cd.

Getting Started

A shell script needs to be saved with
the extension .sh.

The file needs to begin with the
shebang line (#!) to let the Linux
system know which interpreter to use
for the shell script.

For environments that support bash,
use:

#!/bin/bash 

For environments that support shell,
use:

#!/bin/sh

This tutorial assumes that your
environment supports bash.

Shell scripts can also have comments
to increase readability. A good script
always contains comments that help a
reader understand exactly what the
script is doing and the reasoning
behind a design choice.

Creating and Running a Basic Shell
Script

You can create a shell script using
the vi editor, a cat command, or a
text editor.

For this tutorial, you will learn
about creating a shell script with vi:

 1. vi basic_script.sh


This starts the vi editor and creates
a basic_script.sh file.

Then, press i on the keyboard to start
INSERT MODE. Add the following lines:

basic_script.sh

#!/bin/bash
whoami
date

This script runs the commands whoami
and date. whoami displays the active
username. date displays the current
system timestamp.

To save and exit the vi editor:

  • Press ESC
  • Type : (colon character)
  • Type wq
  • Press ENTER

Finally, you can run the script with
the following command:

 1. bash basic_script.sh


You may get output that resembles the
following:

Output
root
Fri Jun 19 16:59:48 UTC 2020

The first line of output corresponds
to the whoami command. The second line
of output corresponds to the date
command.

You can also run a script without
specifying bash:

 1. ./basic_script.sh


Running the file this way might
require the user to give permission
first. Running it with bash doesn’t
require this permission.

Output
~bash: ./basic_script.sh: Permission denied

The command bash filename only
requires the read permission from the
file.

Whereas the command ./filename, runs
the file as an executable and requires
the execute permission.

To execute the script, you will need
to update the permissions.

 1. chmod +x basic_script.sh


This command applies chmod and gives x
(executable) permissions to the
current user.

Using Variables in Shell Scripts

Scripts can include user-defined
variables. In fact, as scripts get
larger in size, it is essential to
have variables that are clearly
defined and that have self-descriptive
names.

Add the following lines to the script:

basic_script.sh

#!/bin/bash
# This is a comment

# defining a variable
GREETINGS="Hello! How are you"
echo $GREETINGS

GREETINGS is the variable defined and
later accessed using $ (dollar sign
symbol. There should be no space in
the line where variables are being
assigned a value.

Run the script:

 1. bash basic_script.sh


This prints out the value assigned to
the variable:

Output
Hello! How are you

When the script is run, GREETINGS is
defined and accessed.

Reading Input from the Command Line

Shell scripts can be made interactive
with the ability to accept input from
the command line. You can use the read
command to store the command line
input in a variable.

Add the following lines to the script:

basic_script.sh

#!/bin/bash
# This is a comment

# defining a variable
echo "What is your name?"
# reading input
read NAME
# defining a variable
GREETINGS="Hello! How are you"
echo $NAME $GREETINGS

A variable NAME has been used to
accept input from the command line.
This script waits for the user to
provide input for NAME. Then it prints
NAME and GREETINGS.

Output
What is your name?
Sammy
Sammy Hello! How are you

In this example, the user has provided
the prompt with the name: Sammy.

Defining Functions

Users can define their own functions
in a script. These functions can take
multiple arguments.

Add the following lines to the script:

#!/bin/bash
#This is a comment

# defining a variable
echo "What is the name of the directory you want to create?"
# reading input 
read NAME

echo "Creating $NAME ..."
mkcd ()
{
  mkdir "$NAME"
  cd "$NAME"
}

mkcd
echo "You are now in $NAME"

This script asks the user for a
directory name. Then, it uses mkdir to
create the directory and cd into it.

Output
What is the name of the directory you want to create?
test_dir
Creating test_dir ...
You are now in test_dir

In this example, the user has provided
the prompt with the input: test_dir.
Next, the script creates a new
directory with that name. Finally, the
script changes the user’s current
working directory to test_dir.

Conclusion

In this article, you learned how to
create and execute shell scripts for
the command line in Linux.

Consider some repetitive or
time-consuming tasks that you
frequently perform that could benefit
from a script.

Continue your learning with if-else,
arrays, and arguments in the command
line.

If you’ve enjoyed this tutorial and
our broader community, consider
checking out our DigitalOcean products
which can also help you achieve your
development goals.

Learn more here

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
About the authors
Default avatar
Jayant Verma

author

Developer and author at DigitalOcean.
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Default avatar
Bradley Kouchi

editor

Developer and author at DigitalOcean.
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Still looking for an answer?

Ask a questionSearch for more help
Was this helpful?
YesNo
  
Comments
JournalDev • October 29, 2020

Hello Jayant! Thanks for this post, is
really useful for me. Is there any way
to run a command with options within a
shell script? Thanks again!

- Juan

JournalDev • August 26, 2020

I like it. Crisp and simple :)

- khushbu

JournalDev • June 24, 2020

I have gone through the blog.It is
very good

- Siddharth Pandey

Creative CommonsThis work is licensed
under a Creative Commons
Attribution-NonCommercial- ShareAlike
4.0 International License.

Popular Topics

  • Ubuntu
  • Linux Basics
  • JavaScript
  • React
  • Python
  • Security
  • MySQL
  • Docker
  • Kubernetes
  • Browse all topic tags
  • Free Managed Hosting
  • All tutorials

Questions

  • Q&A Forum
  • Ask a question
  • DigitalOcean Support

Try DigitalOcean for free

Click here to Sign up and get $200 of
credit to try our products over 60
days!

Join the Tech Talk

Success! Thank you! Please check your
email for further details.

Please complete your information!

[                    ]
[                    ]
[                    ][Sign up]
[newsLetter]
Get our biweekly newsletter

Sign up for Infrastructure as a
Newsletter.

[hollieHub4]
Hollie's Hub for Good

Working on improving health and
education, reducing inequality, and
spurring economic growth? We'd like to
help.

[write4DO]
Become a contributor

You get paid; we donate to tech
nonprofits.

Featured on CommunityKubernetes Course
Learn Python 3Machine Learning in
PythonGetting started with GoIntro to
Kubernetes
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
DigitalOcean ProductsVirtual Machines
Managed DatabasesManaged Kubernetes
Block StorageObject StorageMarketplace
VPCLoad Balancers

Welcome to the developer cloud

DigitalOcean makes it simple to launch
in the cloud and scale up as you grow
– whether you’re running one virtual
machine or ten thousand.

Learn More
DigitalOcean Cloud Control Panel

Company

  • About
  • Leadership
  • Blog
  • Careers
  • Customers
  • Partners
  • Channel Partners
  • Referral Program
  • Affiliate Program
  • Press
  • Legal
  • Security
  • Investor Relations
  • DO Impact

Products

  • Products Overview
  • Droplets
  • Kubernetes
  • App Platform
  • Functions
  • Cloudways
  • Managed Databases
  • Spaces
  • Marketplace
  • Load Balancers
  • Block Storage
  • Tools & Integrations
  • API
  • Pricing
  • Documentation
  • Release Notes
  • Uptime

Community

  • Tutorials
  • Q&A
  • CSS-Tricks
  • Write for DOnations
  • Currents Research
  • Hatch Startup Program
  • deploy by DigitalOcean
  • Shop Swag
  • Research Program
  • Open Source
  • Code of Conduct
  • Newsletter Signup
  • Meetups

Solutions

  • Website Hosting
  • VPS Hosting
  • Web & Mobile Apps
  • Game Development
  • Streaming
  • VPN
  • SaaS Platforms
  • Cloud Hosting for Blockchain
  • Startup Resources

Contact

  • Support
  • Sales
  • Report Abuse
  • System Status
  • Share your ideas

Company

caret down

  • About
  • Leadership
  • Blog
  • Careers
  • Customers
  • Partners
  • Channel Partners
  • Referral Program
  • Affiliate Program
  • Press
  • Legal
  • Security
  • Investor Relations
  • DO Impact

Products

caret down

  • Products Overview
  • Droplets
  • Kubernetes
  • App Platform
  • Functions
  • Cloudways
  • Managed Databases
  • Spaces
  • Marketplace
  • Load Balancers
  • Block Storage
  • Tools & Integrations
  • API
  • Pricing
  • Documentation
  • Release Notes
  • Uptime

Community

caret down

  • Tutorials
  • Q&A
  • CSS-Tricks
  • Write for DOnations
  • Currents Research
  • Hatch Startup Program
  • deploy by DigitalOcean
  • Shop Swag
  • Research Program
  • Open Source
  • Code of Conduct
  • Newsletter Signup
  • Meetups

Solutions

caret down

  • Website Hosting
  • VPS Hosting
  • Web & Mobile Apps
  • Game Development
  • Streaming
  • VPN
  • SaaS Platforms
  • Cloud Hosting for Blockchain
  • Startup Resources

Contact

caret down

  • Support
  • Sales
  • Report Abuse
  • System Status
  • Share your ideas

DigitalOcean logo

© 2022 DigitalOcean, LLC. All rights
reserved.

  • Twitchtv
  • Twitter
  • Facebook
  • Instagram
  • YouTube
  • LinkedIn
  • Dev.to
  • GlassDoor
  • BuiltInNYC

Sea floor left
Sea floor middle
Sea floor right
